name: Build


on:
  push: 
    branches: [master, dev]


jobs:
  windows-build:
    runs-on: windows-latest
    strategy:
      matrix:
        configuration: [Debug, Release]

    steps:
    - uses: actions/checkout@v4
  
    - name: Enable NMake
      uses: ilammy/msvc-dev-cmd@v1.13.0

    - name: Build
      run: |
          mkdir build 
          cd build
          cmake -DCMAKE_BUILD_TYPE=${{ matrix.configuration }} -G "NMake Makefiles" ..
          nmake install

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.configuration }}_Windows
        path: build/Databases
  

  linux-build:
    runs-on: ubuntu-latest
    container: lazypanda07/ubuntu_cxx20:24.04
    strategy:
      matrix:
        configuration: [Debug, Release]

    steps:
    - uses: actions/checkout@v4
  
    - name: Build
      run: |
          mkdir build
          cd build
          cmake -DCMAKE_BUILD_TYPE=${{ matrix.configuration }} ..
          make install -j $(nproc)

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.configuration }}_Linux
        path: build/Databases


  android-build:
    runs-on: ubuntu-latest
    container:
      image: lazypanda07/ubuntu_cxx20:android
    strategy:
      matrix:
        configuration: [Debug, Release]

    steps:
    - uses: actions/checkout@v4

    - name: Build
      run: |
          mkdir build
          cd build
          cmake -DCMAKE_BUILD_TYPE=${{ matrix.configuration }} ${ANDROID_CMAKE_BUILD_ARGUMENTS} ..
          make install -j $(nproc)

    - name: Move
      working-directory: build/Databases
      run: |
          cd lib
          mkdir arm64-v8a
          mv *.so arm64-v8a
          rm -rf *.a
          rm -rf vendor

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.configuration }}_Android
        path: build/Databases


  windows-tests:
    runs-on: windows-latest
    needs: windows-build
    strategy:
      matrix:
        configuration: [Debug, Release]

    steps:
    - uses: actions/checkout@v4

    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        name: ${{ matrix.configuration }}_Windows
        path: Databases

    - name: Get Google Test
      uses: LazyPanda07/get-gtest@v1
      with:
        build-type: ${{ matrix.configuration }}
        install-path: Tests/gtest

    - name: Enable NMake
      uses: ilammy/msvc-dev-cmd@v1.13.0

    - name: Build tests
      working-directory: Tests
      run: |
          mkdir build
          cd build
          cmake -DCMAKE_BUILD_TYPE=${{ matrix.configuration }} -G "NMake Makefiles" ..
          nmake install

    - name: Tests
      working-directory: Tests
      run: |
          cd build/bin
          .\Tests.exe


  linux-tests:
    runs-on: ubuntu-latest
    needs: linux-build
    container:
      image: lazypanda07/ubuntu_cxx20:24.04
    strategy:
      matrix:
        configuration: [Debug, Release]

    steps:
    - uses: actions/checkout@v4

    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        name: ${{ matrix.configuration }}_Linux
        path: Databases
        
    - name: Build tests
      working-directory: Tests
      run: |
          mkdir build
          cd build
          cmake -DCMAKE_BUILD_TYPE=${{ matrix.configuration }} ..
          make install -j $(nproc)

    - name: Tests
      working-directory: Tests
      run: |
          cd build/bin
          LD_LIBRARY_PATH=$(pwd) ./Tests
      